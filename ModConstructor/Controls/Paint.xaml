<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ModConstructor.Controls"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             x:Class="ModConstructor.Controls.Paint"
             xmlns:core="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d"
             Focusable="True"
             MouseDown="OnMouseDown"
             KeyDown="OnKeyDown"
             Loaded="OnLoaded"
             DataContext="{Binding Mode=OneWay, RelativeSource={RelativeSource Self}}"
             d:DesignHeight="500" d:DesignWidth="800">
    <UserControl.Resources>
        <DrawingBrush x:Key="gridBrush" Viewport="0,0,2,2" ViewportUnits="Absolute" TileMode="Tile">
            <DrawingBrush.Drawing>
                <DrawingGroup>
                    <GeometryDrawing Brush="{StaticResource Border}">
                        <GeometryDrawing.Geometry>
                            <GeometryGroup>
                                <RectangleGeometry Rect="0,0,50,50" />
                                <RectangleGeometry Rect="50,50,50,50" />
                            </GeometryGroup>
                        </GeometryDrawing.Geometry>
                    </GeometryDrawing>
                </DrawingGroup>
            </DrawingBrush.Drawing>
        </DrawingBrush>
        <DrawingBrush x:Key="Transparency" Viewport="0,0,10,10" ViewportUnits="Absolute" TileMode="Tile">
            <DrawingBrush.Drawing>
                <DrawingGroup>
                    <GeometryDrawing Brush="#FFFFFFFF">
                        <GeometryDrawing.Geometry>
                            <GeometryGroup>
                                <RectangleGeometry Rect="50,0,50,50" />
                                <RectangleGeometry Rect="0,50,50,50" />
                            </GeometryGroup>
                        </GeometryDrawing.Geometry>
                    </GeometryDrawing>
                    <GeometryDrawing Brush="#FFBFBFBF">
                        <GeometryDrawing.Geometry>
                            <GeometryGroup>
                                <RectangleGeometry Rect="0,0,50,50" />
                                <RectangleGeometry Rect="50,50,50,50" />
                            </GeometryGroup>
                        </GeometryDrawing.Geometry>
                    </GeometryDrawing>
                </DrawingGroup>
            </DrawingBrush.Drawing>
        </DrawingBrush>
        <core:Double x:Key="iconSize">25</core:Double>
    </UserControl.Resources>
    <Border MinHeight="500" BorderBrush="{StaticResource Border}" BorderThickness="1" Background="{StaticResource Workspace}">
        <Grid>
            <Canvas x:Name="canvas" MouseWheel="CanvasMouseWheel" Focusable="True" KeyDown="CanvasKeyDown" MouseDown="CanvasMouseDown" MouseUp="CanvasMouseUp" MouseEnter="CanvasMouseEnter" MouseLeave="CanvasMouseLeave" MouseMove="CanvasMouseMove" Background="Transparent" Cursor="None" ClipToBounds="True">
                <Grid x:Name="image">
                    <Image Source="{Binding IS}" RenderOptions.BitmapScalingMode="NearestNeighbor"/>
                    <Border x:Name="border" IsHitTestVisible="False" BorderThickness="2" BorderBrush="{DynamicResource AppColor}" Margin="-2" Visibility="{Binding showBorder, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <Grid x:Name="grid" IsHitTestVisible="False" Visibility="{Binding showGrid, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <Path StrokeThickness="1" Stroke="{StaticResource Border}" StrokeDashArray="8,4" x:Name="selection">
                        <Path.Fill>
                            <SolidColorBrush Color="{DynamicResource MainColor}" Opacity="0.25"/>
                        </Path.Fill>
                    </Path>
                </Grid>
                <Grid x:Name="cursor" IsHitTestVisible="False" Visibility="Collapsed">
                    <Image Source="../Resources/Brush.png" Width="16" Height="16" Margin="0" RenderTransformOrigin="0.5,0.5">
                        <Image.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform X="-12" Y="-12"/>
                            </TransformGroup>
                        </Image.RenderTransform>
                    </Image>
                    <Image x:Name="cursorSprite" Width="24" Height="24" RenderTransformOrigin="0.5,0.5">
                        <Image.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform X="4" Y="4"/>
                            </TransformGroup>
                        </Image.RenderTransform>
                    </Image>
                </Grid>
            </Canvas>
            <DockPanel>
                <Border DockPanel.Dock="Right" Width="250" Background="{StaticResource Background}" BorderThickness="1,0,0,0" BorderBrush="{StaticResource Border}">
                    <DockPanel LastChildFill="False">
                        <StackPanel DockPanel.Dock="Top" Margin="2,1">
                            <!--Canvas x:Name="palete" MouseDown="PaleteMouseDown" MouseMove="PaleteMouseMove" MouseUp="PaleteMouseUp" MouseLeave="PaleteMouseLeave" Height="{Binding ActualWidth, Mode=OneWay, RelativeSource={RelativeSource Self}}" Margin="30,0,30,7">
                                <Border x:Name="paleteRing" Padding="30" CornerRadius="500" Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Canvas}}}" Height="{Binding ActualHeight, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Canvas}}}" BorderBrush="{StaticResource Border}" BorderThickness="1">
                                    <Border.Background>
                                        <ImageBrush ImageSource="pack://siteoforigin:,,,/Resources/HSVGradient.png"/>
                                    </Border.Background>
                                    <Border CornerRadius="500" BorderBrush="{StaticResource Border}" BorderThickness="1" Background="{StaticResource Background}"/>
                                </Border>
                                <Border Width="30" Height="30" x:Name="paleteThumb" BorderBrush="{StaticResource Border}" BorderThickness="1" CornerRadius="15" RenderTransformOrigin="0.5,0.5" Background="White" IsHitTestVisible="False">
                                    <Border.RenderTransform>
                                        <TransformGroup>
                                            <TranslateTransform X="-15" Y="-15"/>
                                        </TransformGroup>
                                    </Border.RenderTransform>
                                </Border>
                            </-->
                            <Grid DataContext="{Binding curEditColer}" Margin="0,0,0,7">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*"/>
                                    <ColumnDefinition Width="14*"/>
                                    <ColumnDefinition Width="5*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Column="0" Grid.Row="0" Text="R"/>
                                <TextBlock Grid.Column="0" Grid.Row="1" Text="G"/>
                                <TextBlock Grid.Column="0" Grid.Row="2" Text="B"/>
                                <Slider Grid.Column="1" Grid.Row="0" Margin="2,1" Minimum="0" Maximum="255" SmallChange="1" Value="{Binding R}">
                                    <Slider.Background>
                                        <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                                            <GradientStop Color="Black" Offset="0"/>
                                            <GradientStop Color="Red" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Slider.Background>
                                </Slider>
                                <Slider Grid.Column="1" Grid.Row="1" Margin="2,1" Minimum="0" Maximum="255" SmallChange="1" Value="{Binding G}">
                                    <Slider.Background>
                                        <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                                            <GradientStop Color="Black" Offset="0"/>
                                            <GradientStop Color="Green" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Slider.Background>
                                </Slider>
                                <Slider Grid.Column="1" Grid.Row="2" Margin="2,1" Minimum="0" Maximum="255" SmallChange="1" Value="{Binding B}">
                                    <Slider.Background>
                                        <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                                            <GradientStop Color="Black" Offset="0"/>
                                            <GradientStop Color="Blue" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Slider.Background>
                                </Slider>
                                <xctk:ByteUpDown Grid.Column="2" Grid.Row="0" Value="{Binding R}" Margin="0,1"/>
                                <xctk:ByteUpDown Grid.Column="2" Grid.Row="1" Value="{Binding G}" Margin="0,1"/>
                                <xctk:ByteUpDown Grid.Column="2" Grid.Row="2" Value="{Binding B}" Margin="0,1"/>
                            </Grid>
                            <Grid DataContext="{Binding curEditColer}" Margin="0,0,0,7">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*"/>
                                    <ColumnDefinition Width="14*"/>
                                    <ColumnDefinition Width="5*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Column="0" Grid.Row="0" Text="H"/>
                                <TextBlock Grid.Column="0" Grid.Row="1" Text="S"/>
                                <TextBlock Grid.Column="0" Grid.Row="2" Text="V"/>
                                <Slider Grid.Column="1" Grid.Row="0" Margin="2,1" Minimum="0" Maximum="359" SmallChange="1" Value="{Binding H}">
                                    <Slider.Background>
                                        <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                                            <GradientStop Color="#FF0000" Offset="0"/>
                                            <GradientStop Color="#00FF00" Offset="0.33"/>
                                            <GradientStop Color="#0000FF" Offset="0.66"/>
                                            <GradientStop Color="#FF0000" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Slider.Background>
                                </Slider>
                                <Slider Grid.Column="1" x:Name="SaturationSlider" Grid.Row="1" Margin="2,1" Minimum="0" Maximum="100" SmallChange="1" Value="{Binding S}">
                                    <Slider.Background>
                                        <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                                            <GradientStop Color="White" Offset="0"/>
                                            <GradientStop Color="Red" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Slider.Background>
                                </Slider>
                                <Slider Grid.Column="1" x:Name="ValueSlider" Grid.Row="2" Margin="2,1" Minimum="0" Maximum="100" SmallChange="1" Value="{Binding V}">
                                    <Slider.Background>
                                        <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                                            <GradientStop Color="Black" Offset="0"/>
                                            <GradientStop Color="Red" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Slider.Background>
                                </Slider>
                                <xctk:IntegerUpDown Grid.Column="2" Grid.Row="0" Value="{Binding H}" Margin="0,1" Minimum="0" Maximum="359"/>
                                <xctk:IntegerUpDown Grid.Column="2" Grid.Row="1" Value="{Binding S}" Margin="0,1" Minimum="0" Maximum="100"/>
                                <xctk:IntegerUpDown Grid.Column="2" Grid.Row="2" Value="{Binding V}" Margin="0,1" Minimum="0" Maximum="100"/>
                            </Grid>
                            <Grid DataContext="{Binding curEditColer}" Margin="0,0,0,7">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*"/>
                                    <ColumnDefinition Width="14*"/>
                                    <ColumnDefinition Width="5*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Column="0" Text="A"/>
                                <Slider Grid.Column="1" Grid.Row="3" Margin="2,1" Minimum="0" Maximum="100" SmallChange="1" Value="{Binding A}">
                                    <Slider.Background>
                                        <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                                            <GradientStop Color="Black" Offset="0"/>
                                            <GradientStop Color="White" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Slider.Background>
                                </Slider>
                                <xctk:ByteUpDown Grid.Column="2" Grid.Row="3" Value="{Binding A}" Margin="0,1" Maximum="100"/>
                            </Grid>
                            <Border Height="20" Margin="0,1" BorderThickness="1" BorderBrush="{StaticResource Border}" Background="{StaticResource Transparency}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Rectangle Grid.Column="0" MouseLeftButtonDown="ChoseMain" DataContext="{Binding main}">
                                        <Rectangle.Fill>
                                            <SolidColorBrush Color="{Binding mediacolor}"/>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Rectangle Grid.Column="1" MouseLeftButtonDown="ChoseSecondary" DataContext="{Binding secondary}">
                                        <Rectangle.Fill>
                                            <SolidColorBrush Color="{Binding mediacolor}"/>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                </Grid>
                            </Border>
                        </StackPanel>
                        <StackPanel DockPanel.Dock="Bottom" Visibility="Collapsed">
                            <CheckBox Content="Рамка" Margin="3" HorizontalAlignment="Left" IsChecked="{Binding showBorder}"/>
                            <CheckBox Content="Сетка" Margin="3" HorizontalAlignment="Left" IsChecked="{Binding showGrid}"/>
                            <CheckBox Content="Линейка" Margin="3" HorizontalAlignment="Left"/>
                        </StackPanel>
                        <Grid DockPanel.Dock="Bottom" Margin="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <ToggleButton Grid.Column="0" Margin="1" IsChecked="{Binding doubleScale}" ToolTip="Увеличивать в 2 раза при сохранении">
                                <Image Height="{DynamicResource iconSize}" Source="/Resources/Scale.png"/>
                            </ToggleButton>
                            <ToggleButton Grid.Column="1" Margin="1" IsChecked="{Binding showBorder}" ToolTip="Показывать рамку">
                                <Image Height="{DynamicResource iconSize}" Source="/Resources/Border.png"/>
                            </ToggleButton>
                            <ToggleButton Grid.Column="2" Margin="1" IsChecked="{Binding showGrid}" ToolTip="Показывать сетку">
                                <Image Height="{DynamicResource iconSize}" Source="/Resources/Grid.png"/>
                            </ToggleButton>
                            <ToggleButton Grid.Column="3" Margin="1" IsEnabled="False" ToolTip="Показыват линейку">
                                <Image Height="{DynamicResource iconSize}" Source="/Resources/Measure.png"/>
                            </ToggleButton>
                        </Grid>
                        <Grid DockPanel.Dock="Bottom" Margin="2,2,2,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Button Grid.Column="0" Margin="0,0,1,0" Click="ImportClick" ToolTip="Импортировать изображение">
                                Импорт
                            </Button>
                            <Button Grid.Column="1" Margin="1,0,0,0" Click="ExportClick" ToolTip="Экспортировать изображение">
                                Экспорт
                            </Button>
                        </Grid>
                    </DockPanel>
                </Border>
                <Border x:Name="toolbar" DockPanel.Dock="Top" BorderThickness="0,0,0,1" BorderBrush="{StaticResource Border}" Background="{StaticResource Background}">
                    <DockPanel LastChildFill="True" Margin="1">
                       <Grid DockPanel.Dock="Right">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Button Grid.Column="2" Grid.Row="0" Margin="1" Click="SetPencil" ToolTip="Карандаш (P)">
                                <Image Height="{DynamicResource iconSize}" Source="/Resources/Pen.png"/>
                            </Button>
                            <Button Grid.Column="1" Grid.Row="0" Margin="1" Click="SetFill" ToolTip="Заливка (F)">
                                <Image Height="{DynamicResource iconSize}" Source="/Resources/Fill.png"/>
                            </Button>
                            <Button Grid.Column="0" Grid.Row="0" Margin="1" Click="SetColorPicker" ToolTip="Пипетка (K)">
                                <Image Height="{DynamicResource iconSize}" Source="/Resources/ColorPicker.png"/>
                            </Button>
                            <Button Grid.Column="2" Grid.Row="1" Margin="1" Click="SetSelectRect" ToolTip="Выделение (S)">
                                <Image Height="{DynamicResource iconSize}" Source="/Resources/SelectRect.png"/>
                            </Button>
                            <Button Grid.Column="1" Grid.Row="1" Margin="1" Click="SetMagicWand" ToolTip="Умное выделение (F)" IsEnabled="False">
                                <Image Height="{DynamicResource iconSize}" Source="/Resources/MagicWand.png"/>
                            </Button>
                            <Button Grid.Column="0" Grid.Row="1" Margin="1" Click="SetMagicWand" ToolTip="Умное выделение (F)" IsEnabled="False">
                                <Image Height="{DynamicResource iconSize}" Source="/Resources/Move.png"/>
                            </Button>
                        </Grid>
                        <Rectangle DockPanel.Dock="Right" Margin="3,1" Fill="{StaticResource Border}" Width="1"/>
                        <Grid DockPanel.Dock="Right">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Button Grid.Row="0" Margin="1" ToolTip="Скопировать (Ctrl + C)" Click="OnCopy">
                                <Image Height="{DynamicResource iconSize}" Source="/Resources/Copy.png"/>
                            </Button>
                            <Button Grid.Row="1" Margin="1" ToolTip="Вставить (Ctrl + V)" Click="OnPaste" IsEnabled="False">
                                <Image Height="{DynamicResource iconSize}" Source="/Resources/Paste.png"/>
                            </Button>
                        </Grid>
                        <Rectangle DockPanel.Dock="Right" Margin="3,1" Fill="{StaticResource Border}" Width="1"/>
                        <Button DockPanel.Dock="Right" Margin="1" Click="ClickCenter" ToolTip="Центрировать">
                            <Image Height="{DynamicResource iconSize}" Source="/Resources/Center.png"/>
                        </Button>
                        <Rectangle DockPanel.Dock="Right" Margin="3,1" Fill="{StaticResource Border}" Width="1"/>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <DockPanel Grid.Row="0">
                                <Label DockPanel.Dock="Left" Content="Масштаб:" VerticalContentAlignment="Center"/>
                                <xctk:DoubleUpDown DockPanel.Dock="Left" VerticalAlignment="Center" Margin="1,0" Value="{Binding scale}" Width="60" Minimum="1" Maximum="50" FormatString="{}{0:f1}"/>
                                <Slider Minimum="1" Maximum="{Binding maxScale}" Value="{Binding scale}" VerticalAlignment="Center" Margin="1,0" IsSnapToTickEnabled="True" TickFrequency="0.1"/>
                            </DockPanel>
                            <StackPanel Grid.Row="1" x:Name="parameters" Orientation="Horizontal">

                            </StackPanel>
                        </Grid>
                    </DockPanel>
                </Border>
                <!--Border x:Name="parametersContainer" DockPanel.Dock="Top" Background="{StaticResource Background}" BorderThickness="0,0,0,1" BorderBrush="{StaticResource Border}" Visibility="Collapsed">
                    <StackPanel x:Name="parameters" Orientation="Horizontal">

                    </StackPanel>
                </Border-->
                <Rectangle x:Name="space"/>
            </DockPanel>
        </Grid>
    </Border>
</UserControl>

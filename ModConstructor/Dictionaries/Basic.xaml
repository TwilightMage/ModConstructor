<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ModConstructor.Dictionaries">
    <Style TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{DynamicResource Text}"/>
    </Style>
    
    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{DynamicResource Text}"/>
    </Style>

    <Style TargetType="{x:Type ToolTip}">
        <Setter Property="BorderBrush" Value="{DynamicResource Border}"/>
        <Setter Property="Background" Value="{DynamicResource Background}"/>
    </Style>

    <Style x:Key="Button" TargetType="{x:Type RadioButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <ToggleButton IsChecked="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" BorderThickness="{TemplateBinding BorderThickness}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource Text}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                        <Border x:Name="border" Background="{DynamicResource Control}" BorderBrush="{DynamicResource ControlBorder}" BorderThickness="{TemplateBinding BorderThickness}" Padding="4, 2">
                            <ContentPresenter x:Name="content" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ControlHover}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ControlActive}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ControlDisabled}"/>
                            <Setter TargetName="content" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Link" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <!--ContentPresenter x:Name="text" TextBlock.Foreground="{DynamicResource Text}" VerticalAlignment="Center" HorizontalAlignment="Center" Cursor="Hand"/-->
                    <TextBlock x:Name="text" Foreground="{DynamicResource Text}" Background="Transparent" VerticalAlignment="Center" HorizontalAlignment="Center" Cursor="Hand" Text="{TemplateBinding Content}"/>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsPressed" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="text" Property="TextDecorations" Value="Underline"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="text" Property="Foreground" Value="{DynamicResource TextDisabled}"/>
                            <Setter TargetName="text" Property="Cursor" Value="Arrow"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="{DynamicResource Text}"/>
        <Setter Property="SelectionBrush" Value="{DynamicResource AppColor}"/>
        <Setter Property="CaretBrush" Value="{DynamicResource Text}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                        <Border x:Name="border" Background="{DynamicResource ControlInput}" BorderBrush="{DynamicResource ControlBorder}" BorderThickness="1" Padding="4, 2">
                            <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ControlInputDisabled}"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Slider}">
        <Setter Property="Background" Value="{DynamicResource ControlInput}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Grid>
                        <Border BorderThickness="1" BorderBrush="{DynamicResource Border}" Background="{TemplateBinding Background}" Height="8" Margin="5,0"/>
                        <Track x:Name="PART_Track">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="Slider.DecreaseLarge" Opacity="0"/>
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{DynamicResource ThumbLikeButton}" Width="10" Height="20"/>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton BorderThickness="1" BorderBrush="{DynamicResource Border}" Height="8" Command="Slider.IncreaseLarge" Opacity="0"/>
                            </Track.IncreaseRepeatButton>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ThumbLikeButton" TargetType="{x:Type Thumb}">
        <Setter Property="Foreground" Value="{DynamicResource Text}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                        <Border x:Name="border" Background="{DynamicResource Control}" BorderBrush="{DynamicResource ControlBorder}" BorderThickness="{TemplateBinding BorderThickness}" Padding="4, 2">
                            <ContentPresenter x:Name="text" TextBlock.Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ControlHover}"/>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ControlActive}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ControlDisabled}"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{DynamicResource Text}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                        <Border x:Name="border" Background="{DynamicResource Control}" BorderBrush="{DynamicResource ControlBorder}" BorderThickness="{TemplateBinding BorderThickness}" Padding="4, 2">
                            <ContentPresenter x:Name="text" TextBlock.Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ControlHover}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ControlActive}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ControlDisabled}"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <StackPanel Orientation="Horizontal">
                        <Border x:Name="border" Background="{DynamicResource ControlInput}" BorderBrush="{DynamicResource ControlBorder}" BorderThickness="1" Width="15" Height="15" Padding="3">
                            <Rectangle x:Name="marker" Fill="{DynamicResource AppColor}"/>
                        </Border>
                        <TextBlock Text="{TemplateBinding Content}" Foreground="{DynamicResource Text}" Margin="7,0,0,0"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="marker" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="marker" Property="Fill" Value="{DynamicResource ControlBorder}"/>
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ControlInputDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>